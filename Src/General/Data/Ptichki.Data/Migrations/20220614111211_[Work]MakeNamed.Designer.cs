// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ptichki.Data.Contexts;

namespace Ptichki.Data.Migrations
{
    [DbContext(typeof(PtichkiDbContext))]
    [Migration("20220614111211_[Work]MakeNamed")]
    partial class WorkMakeNamed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ptichki.Domain.Models.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CatalogId")
                        .HasColumnType("int");

                    b.Property<string>("CountOfProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Bird", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BirdAge")
                        .HasColumnType("int");

                    b.Property<string>("BirdSex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BirdTypesId")
                        .HasColumnType("int");

                    b.Property<float>("BirdWeight")
                        .HasColumnType("real");

                    b.Property<float>("FeedConsumption")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("WaterConsumption")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BirdTypesId");

                    b.ToTable("Birds");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.BirdType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BirdTypes");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.EmployeesInDepartments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesInDepartments");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("OrderPrice")
                        .HasColumnType("real");

                    b.Property<string>("TransactionCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.OrderComposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderCompositions");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StageId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.ProcessTechnology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParameterId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductCatalogId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ParameterId");

                    b.HasIndex("ProcessId");

                    b.HasIndex("ProductCatalogId");

                    b.ToTable("ProcessTechnologies");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.ProductCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Composition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<int?>("BirdId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("BirdId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ProcessId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Batch", b =>
                {
                    b.HasOne("Ptichki.Domain.Models.ProductCatalog", "Catalog")
                        .WithMany("Batches")
                        .HasForeignKey("CatalogId");

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Bird", b =>
                {
                    b.HasOne("Ptichki.Domain.Models.BirdType", "BirdTypes")
                        .WithMany("Birds")
                        .HasForeignKey("BirdTypesId");

                    b.Navigation("BirdTypes");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.EmployeesInDepartments", b =>
                {
                    b.HasOne("Ptichki.Domain.Models.Department", "Department")
                        .WithMany("EmployeesInDepartments")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Ptichki.Domain.Models.Employee", "Employee")
                        .WithMany("EmployeesInDepartments")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Order", b =>
                {
                    b.HasOne("Ptichki.Domain.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.OrderComposition", b =>
                {
                    b.HasOne("Ptichki.Domain.Models.Batch", "Batch")
                        .WithMany("OrderCompositions")
                        .HasForeignKey("BatchId");

                    b.HasOne("Ptichki.Domain.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("Batch");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Process", b =>
                {
                    b.HasOne("Ptichki.Domain.Models.Stage", "Stage")
                        .WithMany("Processes")
                        .HasForeignKey("StageId");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.ProcessTechnology", b =>
                {
                    b.HasOne("Ptichki.Domain.Models.Equipment", "Equipment")
                        .WithMany("ProcessTechnologies")
                        .HasForeignKey("EquipmentId");

                    b.HasOne("Ptichki.Domain.Models.Parameter", "Parameter")
                        .WithMany("ProcessTechnologies")
                        .HasForeignKey("ParameterId");

                    b.HasOne("Ptichki.Domain.Models.Process", "Process")
                        .WithMany("ProcessTechnologies")
                        .HasForeignKey("ProcessId");

                    b.HasOne("Ptichki.Domain.Models.ProductCatalog", "ProductCatalog")
                        .WithMany("ProcessTechnologies")
                        .HasForeignKey("ProductCatalogId");

                    b.Navigation("Equipment");

                    b.Navigation("Parameter");

                    b.Navigation("Process");

                    b.Navigation("ProductCatalog");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Work", b =>
                {
                    b.HasOne("Ptichki.Domain.Models.Batch", "Batch")
                        .WithMany("Works")
                        .HasForeignKey("BatchId");

                    b.HasOne("Ptichki.Domain.Models.Bird", "Bird")
                        .WithMany("Works")
                        .HasForeignKey("BirdId");

                    b.HasOne("Ptichki.Domain.Models.Employee", "Employee")
                        .WithMany("Works")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Ptichki.Domain.Models.Equipment", "Equipment")
                        .WithMany("Works")
                        .HasForeignKey("EquipmentId");

                    b.HasOne("Ptichki.Domain.Models.Process", "Process")
                        .WithMany("Works")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Batch");

                    b.Navigation("Bird");

                    b.Navigation("Employee");

                    b.Navigation("Equipment");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Batch", b =>
                {
                    b.Navigation("OrderCompositions");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Bird", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.BirdType", b =>
                {
                    b.Navigation("Birds");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Department", b =>
                {
                    b.Navigation("EmployeesInDepartments");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Employee", b =>
                {
                    b.Navigation("EmployeesInDepartments");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Equipment", b =>
                {
                    b.Navigation("ProcessTechnologies");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Parameter", b =>
                {
                    b.Navigation("ProcessTechnologies");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Process", b =>
                {
                    b.Navigation("ProcessTechnologies");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.ProductCatalog", b =>
                {
                    b.Navigation("Batches");

                    b.Navigation("ProcessTechnologies");
                });

            modelBuilder.Entity("Ptichki.Domain.Models.Stage", b =>
                {
                    b.Navigation("Processes");
                });
#pragma warning restore 612, 618
        }
    }
}
